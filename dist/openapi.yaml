openapi: 3.0.0
#servers:
  # Added by API Auto Mocking Plugin
 # - description: SwaggerHub API Auto Mocking
   # url: https://virtserver.swaggerhub.com/MayaSosnovik/API/1.0.0
info:
  description: This is a simple API
  version: "1.0.0"
  title: Simple Inventory API
  contact:
    email: you@your-company.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
servers:
# local:
# Added by API Auto Mocking Plugin
- description: SwaggerHub API Auto Mocking
  url: https://virtserver.swaggerhub.com/MayaSosnovik/API/1.0.0
- url: "http://127.0.0.1:3000"
# remote:
# - url: "http://132.72.65.211"
tags:
- name: Auth
  description: All authentication related routes
- name: Users
  description: All the user's personal app info
- name: Recipes
  description: All reciepes general info
paths:
  /Register:
    post:
      tags:
        - Auth
      summary: a new user from the client was added to the server.
      operationId: register
      description: a JSON object contatins all the details about the new user.
      responses:
        '201':
          description: user created
        #'400':
          #description: wrong input parameters
        '409':
          description: username taken
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        description: new User to add
  /Login:
    post:
      tags:
        - Auth
      summary: a new user has been logged in
      operationId: login
      description: a JSON object contatins all the details about the new user.
      responses:
        '201':
          description: login succeeded
        '401':
          description: Username or Password incorrect
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/userLogin'
        description: login User
  /Logout:
    post:
      tags:
        - Auth
      summary: logout
      operationId: logout
      description: logout
      responses:
        '200':
          description: logout succeeded
        #'401':
         # description: Username or Password incorrect
  /recipes/random:
    get:
      tags:
        - Recipes
      summary: get random 3 recipes from the spoonacularAPI
      operationId: randomRecipes
      description: get random 3 recipes from the spoonacularAPI
      responses:
        '200':
          description: data of a specific 3 recipes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/randomArray'
        #'404':
         # description: recipe not found
  /recipes/recipe:
    get:
      tags:
        - Recipes
      summary: get data of a specific recipe
      operationId: showrecipe
      description: get from the client a recipe and returns his data
      parameters:
        - in: query
          name: recipeId
          description: the ID of the recipe
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: data of a specific recipe
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecipeDisplay'
        '404':
          description: recipe not found
  /recipes/search:
    get:
      tags:
        - Recipes
      summary: get list of recipes
      operationId: searchRecipes
      description: get from the client a string of recipe and returns a list of recipes, the length of the list is 5/10/15. the default lenth is 5. there is an option to search by cuisine, diets, intolerances.
      parameters:
        - in: query
          name: dishName
          description: a recipe the client is searching for.
          required: false
          schema:
            type: string
            example: italian
        - in: query
          name: cuisine
          description: cuisine.
          required: false
          schema:
            type: string
            example: italian
        - in: query
          name: intolerance
          description: intolerance.
          required: false
          schema:
            type: string
            example: gluten
        - in: query
          name: diet
          description: intolerance.
          required: false
          schema:
            type: string
            example: Gluten
        - in: query
          name: number
          description: number of results.
          required: false
          schema:
            type: integer
            example: 15
        
      responses:
        '200':
          description: data of a specific recipe
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecipeSearchArray'
        '204':
          description: No results
  /users/favorites:
    post:
      tags:
        - Users
      summary: add a recipe to favorites of  logged in user
      operationId: addToFavorites
      description: a JSON object contatins the id of the recipe.
      responses:
        '200':
          description: The Recipe successfully saved as favorite
        '401':
          description: Unauthorized
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/addToFavorites'
        description: login User
    get:
      tags:
        - Users
      summary: gets data of favorite recipes of the logged in user
      operationId: getFavorites
      description: get from the client a recipe and returns his data
      #parameters:
      responses:
        '200':
          description: data of a specific recipe
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/recipePreview'
        '204':
          description: No favorite recipes
        '401':
          description: Unauthorized
  /users/FamilyRecipes:
    get:
      tags:
        - Users
      summary: gets data of family recipes of the logged in user
      operationId: getFemilyRecipes
      description: gets data of family recipes of the logged in user
      responses:
        '200':
          description: list of specific recipes.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FamilyRecipes'
        '404':
          description: recipes not found
  /users/lastWatchedRecipes:
    get:
      tags:
        - Users
      summary: get last three watched recipes the logged in user
      operationId: lastWatchedRecipes
      description: get last three watched recipes the logged in user
      responses:
        '200':
          description: data last three watched recipes the logged in user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/last3WatchedArray'
        '204':
          description: No last watched recipes
        '401':
          description: Unauthorized
  /users/MyRecipes:
    post:
      tags:
        - Users
      summary: add a recipe to  my recipes of the logged in user
      operationId: addToMyRecipes
      description: a JSON object contatins the details of the new recipe
      responses:
        '201':
          description: new recipe added
        '401':
          description: Unauthorized
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/addToMyRecipes'
        description: login User
    get:
      tags:
        - Users
      summary: gets data of my recipes of the logged in user
      operationId: getMyRecipes
      description: gets data of my recipes of the logged in user
      #parameters:
      responses:
        '200':
          description: data of a specific recipe
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/myRecipes'
        '204':
          description: No my recipes
        '401':
          description: Unauthorized
  /users/recipe:
    get:
      tags:
        - Users
      summary: gets data of a specific recipe
      operationId: viewRecipe
      description: gets data of my recipes of the logged in user
      #parameters:
      responses:
        '200':
          description: data of a specific recipe
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getMyRecipes'
        '401':
          description: Unauthorized
        '404':
          description: recipe not found
  /recipes:
    get:
      tags:
        - Recipes
      summary: check if we can reach the route
      operationId: recipes
      description: check if we can reach the route
      responses:
        '200':
          description: im here
    

components:
  schemas:
    User:
      type: object
      required:
        - username
        - firstname
        - lastname
        - country
        - password
        - email
      properties:
        username:
          type: string
          minLength: 3
          maxLength: 8
          description: username contains between 3 to 8 letters and contains just letters
          example: mayasos
        firstname:
          type: string
          description: user's first name
          example: Maya
        lastname:
          type: string
          description: user's last name
          example: Sosnovik
        country:
          type: string
          description: user's country
          example: israel
        password:
          type: string
          minLength: 5
          maxLength: 10
          format: password
          description: password contains between 5 to 10 characters, at least one character is a number and at least one of the characters is a special char.
          example: maya!1
        email:
          type: string
          format: email
          description: user's email
          example: maya@gmail.com
    userLogin:
      type: object
      required:
        - username
        - password
      properties:
        username:
          type: string
          minLength: 3
          maxLength: 8
          description: username contains between 3 to 8 letters and contains just letters.
          example: mayasos
        password:
          type: string
          format: password
          description: password contains between 5 to 10 characters, at least one character is a number and at least one of the characters is a special char.
          example: maya!1
    RecipeDisplay:
      type: object
      properties:
        id:
          description: id of the recipe
          type: integer
          example: 715538
        title:
          description: the title of the recipe
          type: string
          example: What to make for dinner tonight?? Bruschetta Style Pork & Pasta
        readyInMinutes:
          description: the time it takes to make the recipe
          type: integer
          example: 35
        image:
          description: link to the image of the recipe
          type: string
          example: https://spoonacular.com/recipeImages/715538-556x370.jpg
        popularity:
          description: the number of likes the recipe got
          type: integer
          example: 163
        vegan:
          description: is the recipe vegan
          type: boolean
          example: false
        vegetarian:
          description: is the recipe vegeterian
          type: boolean
          example: false
        glutenFree:
          description: is the recipe glutenFree
          type: boolean
          example: false
        ingredients:
          type: array
          description: list of components and their quantity
          items:
            $ref: '#/components/schemas/componentsDetails'
        instructions:
          type: string
          description: the instruction for making the recipe.
          example: wash and rinse pork chops and place into the skillet.cut them into bite sized pieces and add half of the Basil Garlic simmer sauce.boil your water and start working on cooking your bow-tie pasta.when you have finished with boiling and draining your pasta, add it to the pork along with the rest of the Basil Garlic Simmering Sauce, mixing lightly.Next you will top with the Chunky Bruschetta Finishing Sauce, cover with Parmesan, and cover. Cooking on low heat 2 to 3 minutes or until heated through.
        servings:
          type: integer
          description: the number of portions you can with the recipe.
          example: 5
        view:
          description: is the recipe viewed before
          type: boolean
          example: false
        favorite:
          description: is the recipe is a favorite recipe of the user
          type: boolean
          example: false
    RecipeSearchArray:
      type: array
      description: list of recipes
      items:
        $ref: '#/components/schemas/RecipeSearchDetails'
      minItems: 0
      maxItems: 15
    RecipeSearchDetails:
      type: object
      properties:
        id:
          description: id of the recipe
          type: integer
          example: 654959
        title:
          description: the title of the recipe
          type: string
          example: Pasta With Tuna
        readyInMinutes:
          description: the time it takes to make the recipe
          type: integer
          example: 45
        image:
          description: link to the image of the recipe
          type: string
          example: https://spoonacular.com/recipeImages/654959-312x231.jpg
        popularity:
          description: the number of likes the recipe got
          type: integer
          example: 2
        vegan:
          description: is the recipe vegan
          type: boolean
          example: false
        vegetarian:
          description: is the recipe vegeterian
          type: boolean
          example: false
        glutenFree:
          description: is the recipe glutenFree
          type: boolean
          example: false
        instructions:
          type: array
          description: list of components and their quantity
          items:
            $ref: '#/components/schemas/instructionsDetails'
        view:
          description: is the recipe viewed before
          type: boolean
          example: false
        favorite:
          description: is the recipe is a favorite recipe of the user
          type: boolean
          example: false
    recipePreview:
      type: object
      properties:
        id:
          description: id of the recipe
          type: integer
          example: 654959
        title:
          description: the title of the recipe
          type: string
          example: Pasta With Tuna
        readyInMinutes:
          description: the time it takes to make the recipe
          type: integer
          example: 45
        image:
          description: link to the image of the recipe
          type: string
          example: https://spoonacular.com/recipeImages/654959-312x231.jpg
        popularity:
          description: the number of likes the recipe got
          type: integer
          example: 2
        vegan:
          description: is the recipe vegan
          type: boolean
          example: false
        vegetarian:
          description: is the recipe vegeterian
          type: boolean
          example: false
        glutenFree:
          description: is the recipe glutenFree
          type: boolean
          example: false
        view:
          description: is the recipe viewed before
          type: boolean
          example: false
        favorite:
          description: is the recipe is a favorite recipe of the user
          type: boolean
          example: false
    componentsDetails:
      type: object
      properties:
        name:
          type: string
          description: the name of the component
          example: sugar
        amount:
          type: number
          description: the amount of the component
          example: 3
        unit:
          type: string
          description: the amount of the component
          example: cups
    instructionsDetails:
      type: object
      properties:
        number:
          type: integer
          description: the step number
          example: 1
        step:
          type: number
          description: the current step in the instructions
          example: Cook pasta in a large pot of boiling water until al dente.

    addToFavorites:
      type: object
      required:
        - recipeId
      properties:
        recipeId:
          type: integer
          description: recipeID of the recipe the logged in user wants to add to his favorites.
          example: 715530
        from: 
          type: string
          description: from where is the recipe (spoonacular/my)
          example: "spoonacular"
    FamilyRecipes:
      type: array
      description: list of recipes
      items:
        $ref: '#/components/schemas/FamilyRecipe'
    FamilyRecipe:
      type: object
      properties:
        recipe_id:
          description: id of the recipe
          type: integer
          example: 1
        title:
          description: the title of the recipe
          type: string
          example: coffee
        family_member:
          description: the family memeber that makes the recipe
          type: string
          example: dad
        when_to_make:
          description: when to make the recipe
          type: string
          example: sunday
        ingredients:
          description: the ingredients of the recipe
          type: string
          example: cofee
        instructions:
          description: the instructions of the recipe
          type: string
          example: cofee
    randomArray:
      type: array
      description: list of recipes
      items:
        $ref: '#/components/schemas/recipePreview'
      minItems: 3
      maxItems: 3
    last3WatchedArray:
      type: array
      description: list of recipes
      items:
        $ref: '#/components/schemas/recipePreview'
      minItems: 0
      maxItems: 3
    addToMyRecipes:
      type: object
      properties:
        title:
          description: the title of the recipe
          type: string
          example: What to make for dinner tonight?? Bruschetta Style Pork & Pasta
        readyInMinutes:
          description: the time it takes to make the recipe
          type: integer
          example: 35
        image:
          description: link to the image of the recipe
          type: string
          example: https://spoonacular.com/recipeImages/715538-556x370.jpg
        vegan:
          description: is the recipe vegan
          type: boolean
          example: false
        vegetarian:
          description: is the recipe vegeterian
          type: boolean
          example: false
        glutenFree:
          description: is the recipe glutenFree
          type: boolean
          example: false
        ingredients:
          description: list of components and their quantity
          type: string
          example: 1 spoon of cofee, 30 ml milk,200 ml water
         # type: array
          #description: list of components and their quantity
          #items:
           # $ref: '#/components/schemas/componentsDetails'
        instructions:
          type: string
          description: the instruction for making the recipe.
          example: wash and rinse pork chops and place into the skillet.cut them into bite sized pieces and add half of the Basil Garlic simmer sauce.boil your water and start working on cooking your bow-tie pasta.when you have finished with boiling and draining your pasta, add it to the pork along with the rest of the Basil Garlic Simmering Sauce, mixing lightly.Next you will top with the Chunky Bruschetta Finishing Sauce, cover with Parmesan, and cover. Cooking on low heat 2 to 3 minutes or until heated through.
        servings:
          type: integer
          description: the number of portions you can with the recipe.
          example: 5
        #view:
         # description: is the recipe viewed before
          #type: boolean
          #example: false
        #favorite:
         # description: is the recipe is a favorite recipe of the user
          #type: boolean
          #example: false
    getMyRecipes:
      type: object
      properties:
        title:
          description: the title of the recipe
          type: string
          example: What to make for dinner tonight?? Bruschetta Style Pork & Pasta
        readyInMinutes:
          description: the time it takes to make the recipe
          type: integer
          example: 35
        image:
          description: link to the image of the recipe
          type: string
          example: https://spoonacular.com/recipeImages/715538-556x370.jpg
        vegan:
          description: is the recipe vegan
          type: boolean
          example: false
        vegetarian:
          description: is the recipe vegeterian
          type: boolean
          example: false
        glutenFree:
          description: is the recipe glutenFree
          type: boolean
          example: false
        extendedIngredients:
          description: list of components and their quantity
          type: string
          example: 1 spoon of cofee, 30 ml milk,200 ml water
        # type: array
          #description: list of components and their quantity
          #items:
          # $ref: '#/components/schemas/componentsDetails'
        instructions:
          type: string
          description: the instruction for making the recipe.
          example: wash and rinse pork chops and place into the skillet.cut them into bite sized pieces and add half of the Basil Garlic simmer sauce.boil your water and start working on cooking your bow-tie pasta.when you have finished with boiling and draining your pasta, add it to the pork along with the rest of the Basil Garlic Simmering Sauce, mixing lightly.Next you will top with the Chunky Bruschetta Finishing Sauce, cover with Parmesan, and cover. Cooking on low heat 2 to 3 minutes or until heated through.
        servings:
          type: integer
          description: the number of portions you can with the recipe.
          example: 5
        view:
          description: is the recipe viewed before
          type: boolean
          example: false
        favorite:
          description: is the recipe is a favorite recipe of the user
          type: boolean
          example: false
      
    myRecipes:
      type: array
      description: list of recipes
      items:
        $ref: '#/components/schemas/getMyRecipes'